basePath: /
definitions:
  authhandler.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  authhandler.UserRegistrationRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      phoneNumber:
        maxLength: 12
        minLength: 9
        type: string
      rePassword:
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - phoneNumber
    - rePassword
    type: object
  authhandler.UserRegistrationResponse:
    properties:
      email:
        type: string
      message:
        description: WaitingResendOTPSeconds uint64 `json:"waiting_resend_otp_seconds"`
        type: string
      nextAction:
        type: string
      phoneNumber:
        type: string
      session:
        type: string
    type: object
  authhandler.VerifyOTPRequest:
    type: object
  userhandler.UpdateUserProfileRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
    type: object
  userhandler.UserProfile:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastLame:
        type: string
      phoneNumber:
        type: string
      userID:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: NoName API
  version: "1.0"
paths:
  /v1/public/auth/login:
    post:
      consumes:
      - application/json
      description: User login by phone or email
      parameters:
      - description: Request
        in: body
        name: UserLoginRequest
        required: true
        schema:
          $ref: '#/definitions/authhandler.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login ok!
          schema:
            type: string
      summary: User login by phone or email
      tags:
      - Public/Auth
  /v1/public/auth/refresh_token:
    get:
      consumes:
      - application/json
      description: Refresh Token
      produces:
      - application/json
      responses:
        "200":
          description: Ok!
          schema:
            type: string
      summary: Refresh Token
      tags:
      - Public/Auth
  /v1/public/auth/registration:
    post:
      consumes:
      - application/json
      description: User registration by phone, email, display name
      parameters:
      - description: Request
        in: body
        name: UserRegistrationRequest
        required: true
        schema:
          $ref: '#/definitions/authhandler.UserRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authhandler.UserRegistrationResponse'
      summary: User registration by phone, email, display name
      tags:
      - Public/Auth
  /v1/public/auth/verify_otp:
    post:
      consumes:
      - application/json
      description: Verify OTP
      parameters:
      - description: Request
        in: body
        name: VerifyOTPRequest
        required: true
        schema:
          $ref: '#/definitions/authhandler.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok!
          schema:
            type: string
      summary: Verify OTP
      tags:
      - Public/Auth
  /v1/public/u/user/logout:
    post:
      consumes:
      - application/json
      description: Logout user
      produces:
      - application/json
      responses:
        "200":
          description: Logout ok!
          schema:
            type: string
      summary: Logout user
      tags:
      - Public/User
  /v1/public/u/user/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userhandler.UserProfile'
      summary: Get user profile
      tags:
      - Public/User
  /v1/public/u/user/update_profile:
    post:
      consumes:
      - application/json
      description: Update user profile
      parameters:
      - description: Request
        in: body
        name: UserProfile
        required: true
        schema:
          $ref: '#/definitions/userhandler.UpdateUserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update profile ok!
          schema:
            type: string
      summary: Update user profile
      tags:
      - Public/User
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
